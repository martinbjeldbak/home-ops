---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app romm
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      romm:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/rommapp/romm
              tag: 3.9.0@sha256:478544fe537a7b4976f2196f4fe465cbdec931b269d8f5167f5c354f718559a7
            env:
              TZ: Australia/Melbourne
              DB_HOST: romm-database-rw
              DB_PORT: 5432
              DB_NAME: romm
              ROMM_DB_DRIVER: postgresql
              ROMM_PORT: &port 8080
              ENABLE_SCHEDULED_RESCAN: true
              SCHEDULED_RESCAN_CRON: "0 3 * * *"  # at 3am
              ENABLE_SCHEDULED_UPDATE_SWITCH_TITLEDB: true
              SCHEDULED_UPDATE_SWITCH_TITLEDB_CRON: "0 4 * * *"  # at 4am
              DISABLE_USERPASS_LOGIN: true  # require sign in with Authentik
              OIDC_ENABLED: "true"
              OIDC_PROVIDER: authentik
              OIDC_REDIRECT_URI: https://romm.local.martinbjeldbak.com/api/oauth/openid
              OIDC_SERVER_APPLICATION_URL: https://auth.local.martinbjeldbak.com/application/o/romm
            envFrom:
              - secretRef:
                  name: romm-secret
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities: { drop: ["ALL"] }
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        controller: romm
        ports:
          http:
            port: *port
    route:
      app:
        hostnames: ["{{ .Release.Name }}.local.martinbjeldbak.com"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port
    persistence:
      data:
        existingClaim: romm
        advancedMounts:
          romm:
            app:
              - subPath: resources
                path: /romm/resources # Resources fetched from IGDB (covers, screenshots, etc.)
              - subPath: assets
                path: /romm/assets # Uploaded saves, states, etc.
      config:
        type: emptyDir
        globalMounts:
          - path: /romm/config
      redis-data:  # cached directory for background tasks
        type: emptyDir
      tmp:
        type: emptyDir
      library:
        type: nfs
        server: alderaan.internal
        path: /volume1/data/emulators
        globalMounts:
          - path: /romm/library
