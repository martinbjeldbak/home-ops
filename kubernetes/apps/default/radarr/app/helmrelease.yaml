---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app radarr
spec:
  interval: 1h
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      radarr:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/radarr
              tag: 5.22.0@sha256:2bf6a9a5f30b28f09fa5601b23d095c64739ab0667753b95493a1bcdf194057d
            env:
              TZ: Australia/Melbourne
              RADARR__APP__INSTANCENAME: Radarr
              RADARR__APP__THEME: dark
              RADARR__AUTH__METHOD: External
              RADARR__LOG__DBENABLED: "False"
              RADARR__LOG__LEVEL: info
              RADARR__SERVER__PORT: &port 80
              RADARR__UPDATE__BRANCH: develop
            envFrom:
              - secretRef:
                  name: radarr-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
              # limits:
              #   memory: 4Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        controller: radarr
        ports:
          http:
            port: *port
    ingress:
      app:
        className: internal
        # annotations:
        #   # This should be the in-cluster DNS name for the authentik outpost service
        #   # as when the external URL is specified here, nginx will overwrite some crucial headers
        #   nginx.ingress.kubernetes.io/auth-url: |-
        #       http://ak-outpost-authentik-embedded-outpost.default.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
        #   # If you're using domain-level auth, use the authentication URL instead of the application URL
        #   nginx.ingress.kubernetes.io/auth-signin: |-
        #       https://movies.local.martinbjeldbak.com/outpost.goauthentik.io/start?rd=$scheme://$http_host$escaped_request_uri
        #   nginx.ingress.kubernetes.io/auth-response-headers: |-
        #       Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-entitlements,X-authentik-email,X-authentik-name,X-authentik-uid
        #   nginx.ingress.kubernetes.io/auth-snippet: |
        #       proxy_set_header X-Forwarded-Host $http_host;
        hosts:
          - host: "movies.local.martinbjeldbak.com"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: radarr-v2
      config-cache:
        existingClaim: radarr-cache-v2
        globalMounts:
          - path: /config/MediaCover
      scripts:
        type: configMap
        name: radarr-configmap
        defaultMode: 0775
        globalMounts:
          - path: /scripts/pushover-notifier.sh
            subPath: pushover-notifier.sh
            readOnly: true
      media:
        type: nfs
        server: nas.local.martinbjeldbak.com
        path: /volume1/data
        globalMounts:
          - path: /data
      tmp:
        type: emptyDir
